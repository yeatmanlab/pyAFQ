:py:mod:`AFQ.models.dki`
========================

.. py:module:: AFQ.models.dki


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   AFQ.models.dki.fit_dki
   AFQ.models.dki.predict



.. py:function:: fit_dki(data_files, bval_files, bvec_files, mask=None, min_kurtosis=-1, max_kurtosis=3, out_dir=None, b0_threshold=50)

   
   Fit the DKI model, save files with derived maps


   :Parameters:

       **data_files** : str or list
           Files containing DWI data. If this is a str, that's the full path to a
           single file. If it's a list, each entry is a full path.

       **bval_files** : str or list
           Equivalent to `data_files`.

       **bvec_files** : str or list
           Equivalent to `data_files`.

       **mask** : ndarray, optional
           Binary mask, set to True or 1 in voxels to be processed.
           Default: Process all voxels.

       **min_kurtosis** : float, optional
           The minimal plausible value of kurtosis. Default: -1.

       **max_kurtosis** : float, optional
           The maximal plausible value of kurtosis. Default: 3.

       **out_dir** : str, optional
           A full path to a directory to store the maps that get computed.
           Default: maps get stored in the same directory as the last DWI file
           in `data_files`.

       **b0_threshold** : float
           ..

   :Returns:

       **file_paths** : a dict with the derived maps that were computed and full-paths
           ..

       to the files containing these maps.
           ..













   ..
       !! processed by numpydoc !!

.. py:function:: predict(params_file, gtab, S0_file=None, out_dir=None)

   
   Create a signal prediction from DKI params

   params_file : str
       Full path to a file with parameters saved from a DKI fit

   gtab : GradientTable object
       The gradient table to predict for

   S0_file : str
       Full path to a nifti file that contains S0 measurements to incorporate
       into the prediction. If the file contains 4D data, the volumes that
       contain the S0 data must be the same as the gtab.b0s_mask.















   ..
       !! processed by numpydoc !!

