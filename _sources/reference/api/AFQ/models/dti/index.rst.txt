:py:mod:`AFQ.models.dti`
========================

.. py:module:: AFQ.models.dti


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   AFQ.models.dti.fit_dti
   AFQ.models.dti.predict



.. py:function:: fit_dti(data_files, bval_files, bvec_files, mask=None, out_dir=None, file_prefix=None, b0_threshold=50)

   
   Fit the DTI model using default settings, save files with derived maps.


   :Parameters:

       **data_files** : str or list
           Files containing DWI data. If this is a str, that's the full path to a
           single file. If it's a list, each entry is a full path.

       **bval_files** : str or list
           Equivalent to `data_files`.

       **bvec_files** : str or list
           Equivalent to `data_files`.

       **mask** : ndarray, optional
           Binary mask, set to True or 1 in voxels to be processed.
           Default: Process all voxels.

       **out_dir** : str, optional
           A full path to a directory to store the maps that get computed.
           Default: maps get stored in the same directory as the last DWI file
           in `data_files`.

       **b0_threshold** : float
           ..

   :Returns:

       **file_paths** : dict
           A dict with the derived maps that were computed and full-paths
           to the files containing these maps.








   .. rubric:: Notes

   Maps that are calculated: FA, MD, AD, RD





   ..
       !! processed by numpydoc !!

.. py:function:: predict(params_file, gtab, S0_file=None, out_dir=None)

   
   Create a signal prediction from DTI params.


   :Parameters:

       **params_file** : str
           Full path to a file with parameters saved from a DKI fit

       **gtab** : GradientTable object
           The gradient table to predict for

       **S0_file** : str
           Full path to a nifti file that contains S0 measurements to incorporate
           into the prediction. If the file contains 4D data, the volumes that
           contain the S0 data must be the same as the gtab.b0s_mask.

   :Returns:

       **fname** : str
           The name of the nifti file with saved predictions.













   ..
       !! processed by numpydoc !!

