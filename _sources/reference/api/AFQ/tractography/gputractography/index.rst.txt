:py:mod:`AFQ.tractography.gputractography`
==========================================

.. py:module:: AFQ.tractography.gputractography


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   AFQ.tractography.gputractography.gpu_track



Attributes
~~~~~~~~~~

.. autoapisummary::

   AFQ.tractography.gputractography.logger


.. py:data:: logger

   

.. py:function:: gpu_track(data, gtab, seed_img, stop_img, odf_model, seed_threshold, stop_threshold, thresholds_as_percentages, max_angle, step_size, n_seeds, random_seeds, rng_seed, ngpus, chunk_size)

   
   Perform GPU tractography on DWI data.


   :Parameters:

       **data** : ndarray
           DWI data.

       **gtab** : GradientTable
           The gradient table.

       **seed_img** : Nifti1Image
           Float or binary mask describing the ROI within which we seed for
           tracking.

       **stop_img** : Nifti1Image
           A float or binary mask that determines a stopping criterion
           (e.g. FA).

       **odf_model** : str, optional
           One of {"OPDT", "CSA"}

       **seed_threshold** : float
           The value of the seed_img above which tracking is seeded.

       **stop_threshold** : float
           The value of the stop_img below which tracking is
           terminated.

       **thresholds_as_percentages** : bool
           Interpret seed_threshold and stop_threshold as percentages of the
           total non-nan voxels in the seed and stop mask to include
           (between 0 and 100), instead of as a threshold on the
           values themselves. 

       **max_angle** : float
           The maximum turning angle in each step.

       **step_size** : float
           The size of a step (in mm) of tractography.

       **n_seeds** : int
           The seeding density: if this is an int, it is is how many seeds in each
           voxel on each dimension (for example, 2 => [2, 2, 2]). If this is a 2D
           array, these are the coordinates of the seeds. Unless random_seeds is
           set to True, in which case this is the total number of random seeds
           to generate within the mask. Default: 1

       **random_seeds** : bool
           If True, n_seeds is total number of random seeds to generate.
           If False, n_seeds encodes the density of seeds to generate.

       **rng_seed** : int
           random seed used to generate random seeds if random_seeds is
           set to True. Default: None    ngpus : int
           Number of GPUs to use.

       **chunk_size** : int
           Chunk size for GPU tracking.

       **Returns**
           ..

       **-------**
           ..














   ..
       !! processed by numpydoc !!

