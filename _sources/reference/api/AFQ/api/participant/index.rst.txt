:py:mod:`AFQ.api.participant`
=============================

.. py:module:: AFQ.api.participant


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   AFQ.api.participant.ParticipantAFQ




.. py:class:: ParticipantAFQ(dwi_data_file, bval_file, bvec_file, output_dir, **kwargs)


   Bases: :py:obj:`object`

   .. py:attribute:: clobber

      

   .. py:method:: make_workflow()


   .. py:method:: export(attr_name='help')

      
      Export a specific output. To print a list of available outputs,
      call export without arguments.


      :Parameters:

          **attr_name** : str
              Name of the output to export. Default: "help"

      :Returns:

          **output** : any
              The specific output, or None if called without arguments.













      ..
          !! processed by numpydoc !!

   .. py:method:: export_up_to(attr_name='help')


   .. py:method:: export_all(viz=True, xforms=True, indiv=True)


   .. py:method:: participant_montage(images_per_row=2)

      
      Generate montage of all bundles for a given subject.


      :Parameters:

          **images_per_row** : int
              Number of bundle images per row in output file.
              Default: 2

      :Returns:

          filename of montage images
              ..













      ..
          !! processed by numpydoc !!

   .. py:method:: cmd_outputs(cmd='rm', dependent_on=None, exceptions=[], suffix='')

      
      Perform some command some or all outputs of pyafq.
      This is useful if you change a parameter and need
      to recalculate derivatives that depend on it.
      Some examples: cp, mv, rm .
      -r will be automtically added when necessary.


      :Parameters:

          **cmd** : str
              Command to run on outputs. Default: 'rm'

          **dependent_on** : str or None
              Which derivatives to perform command on .
              If None, perform on all.
              If "track", perform on all derivatives that depend on the
              tractography.
              If "recog", perform on all derivatives that depend on the
              bundle recognition.
              If "prof", perform on all derivatives that depend on the
              bundle profiling.
              Default: None

          **exceptions** : list of str
              Name outputs that the command should not be applied to.
              Default: []

          **suffix** : str
              Parts of command that are used after the filename.
              Default: ""














      ..
          !! processed by numpydoc !!


