
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "howto/howto_examples/plot_optic_radiations.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_howto_howto_examples_plot_optic_radiations.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_howto_howto_examples_plot_optic_radiations.py:


===========================================================
How to add new bundles into pyAFQ(Optic Radiations Example)
===========================================================

pyAFQ is designed to be customizable and extensible. This example shows how you
can customize it to define a new bundle based on a definition of waypoint and
endpoint ROIs of your design.

In this case, we add the optic radiations, based on work by Caffara et al. [1]_,
[2]_. The optic radiations (OR) are the primary projection of visual information
from the lateral geniculate nucleus of the thalamus to the primary visual
cortex. Studying the optic radiations with dMRI provides a linkage between white
matter tissue properties, visual perception and behavior, and physiological
responses of the visual cortex to visual stimulation.

We start by importing some of the components that we need for this example and
fixing the random seed for reproducibility

.. GENERATED FROM PYTHON SOURCE LINES 21-35

.. code-block:: Python


    import os.path as op
    import plotly
    import numpy as np
    import shutil

    from AFQ.api.group import GroupAFQ
    import AFQ.api.bundle_dict as abd
    import AFQ.data.fetch as afd
    from AFQ.definitions.image import ImageFile, RoiImage
    import AFQ.utils.streamlines as aus
    np.random.seed(1234)









.. GENERATED FROM PYTHON SOURCE LINES 36-43

Get dMRI data
---------------
We will analyze one subject from the Healthy Brain Network Processed Open
Diffusion Derivatives dataset (HBN-POD2) [3]_, [4]_. We'll use a fetcher to
get preprocessed dMRI data for one of the >2,000 subjects in that study. The
data gets organized into a BIDS-compatible format in the `~/AFQ_data/HBN`
folder:

.. GENERATED FROM PYTHON SOURCE LINES 43-46

.. code-block:: Python


    study_dir = afd.fetch_hbn_preproc(["NDARAA948VFH"])[1]








.. GENERATED FROM PYTHON SOURCE LINES 47-57

Define custom `BundleDict` object
--------------------------------
The `BundleDict` object holds information about "include" and "exclude" ROIs,
as well as endpoint ROIS, and whether the bundle crosses the midline. In this
case, the ROIs are all defined in the MNI template space that is used as the
default template space in pyAFQ, but, in principle, other template spaces
could be used.

The ROIs for the case can be downloaded using a custom fetcher which saves
the ROIs to a folder and creates a dictionary of paths to the ROIs:

.. GENERATED FROM PYTHON SOURCE LINES 57-88

.. code-block:: Python


    or_rois = afd.read_or_templates()

    bundles = abd.BundleDict({
        "L_OR": {
            "include": [
                or_rois["left_OR_1"],
                or_rois["left_OR_2"]],
            "exclude": [
                or_rois["left_OP_MNI"],
                or_rois["left_TP_MNI"],
                or_rois["left_pos_thal_MNI"]],
            "start": or_rois['left_thal_MNI'],
            "end": or_rois['left_V1_MNI'],
            "cross_midline": False,
        },
        "R_OR": {
            "include": [
                or_rois["right_OR_1"],
                or_rois["right_OR_2"]],
            "exclude": [
                or_rois["right_OP_MNI"],
                or_rois["right_TP_MNI"],
                or_rois["right_pos_thal_MNI"]],
            "start": or_rois['right_thal_MNI'],
            "end": or_rois['right_V1_MNI'],
            "cross_midline": False
        }
    })






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/2 [00:00<?, ? MB/s]    100%|██████████| 2/2 [00:00<00:00, 6150.01 MB/s]
      0%|          | 0/1 [00:00<?, ? MB/s]    100%|██████████| 1/1 [00:00<00:00, 3281.93 MB/s]
      0%|          | 0/2 [00:00<?, ? MB/s]    100%|██████████| 2/2 [00:00<00:00, 6938.47 MB/s]
      0%|          | 0/1 [00:00<?, ? MB/s]    100%|██████████| 1/1 [00:00<00:00, 3615.78 MB/s]
      0%|          | 0/1 [00:00<?, ? MB/s]    100%|██████████| 1/1 [00:00<00:00, 3975.64 MB/s]
      0%|          | 0/19 [00:00<?, ? MB/s]     11%|█         | 2/19 [00:00<00:01, 12.64 MB/s]     21%|██        | 4/19 [00:00<00:01, 12.62 MB/s]     42%|████▏     | 8/19 [00:00<00:00, 18.35 MB/s]     84%|████████▍ | 16/19 [00:00<00:00, 31.00 MB/s]    100%|██████████| 19/19 [00:00<00:00, 29.91 MB/s]
      0%|          | 0/19 [00:00<?, ? MB/s]     11%|█         | 2/19 [00:00<00:01, 12.61 MB/s]     21%|██        | 4/19 [00:00<00:01, 12.59 MB/s]     42%|████▏     | 8/19 [00:00<00:00, 18.34 MB/s]     84%|████████▍ | 16/19 [00:00<00:00, 30.98 MB/s]    100%|██████████| 19/19 [00:00<00:00, 29.87 MB/s]
      0%|          | 0/1 [00:00<?, ? MB/s]    100%|██████████| 1/1 [00:00<00:00, 2616.53 MB/s]
      0%|          | 0/1 [00:00<?, ? MB/s]    100%|██████████| 1/1 [00:00<00:00, 3039.35 MB/s]
      0%|          | 0/1 [00:00<?, ? MB/s]    100%|██████████| 1/1 [00:00<00:00, 3782.06 MB/s]
      0%|          | 0/19 [00:00<?, ? MB/s]     11%|█         | 2/19 [00:00<00:01, 12.54 MB/s]     21%|██        | 4/19 [00:00<00:01, 12.52 MB/s]     42%|████▏     | 8/19 [00:00<00:00, 18.23 MB/s]     79%|███████▉  | 15/19 [00:00<00:00, 29.67 MB/s]    100%|██████████| 19/19 [00:00<00:00, 29.70 MB/s]
      0%|          | 0/19 [00:00<?, ? MB/s]     11%|█         | 2/19 [00:00<00:01, 12.49 MB/s]     21%|██        | 4/19 [00:00<00:01, 12.50 MB/s]     42%|████▏     | 8/19 [00:00<00:00, 18.21 MB/s]     84%|████████▍ | 16/19 [00:00<00:00, 32.66 MB/s]    100%|██████████| 19/19 [00:00<00:00, 29.66 MB/s]
      0%|          | 0/1 [00:00<?, ? MB/s]    100%|██████████| 1/1 [00:00<00:00, 2949.58 MB/s]
      0%|          | 0/1 [00:00<?, ? MB/s]    100%|██████████| 1/1 [00:00<00:00, 2851.33 MB/s]




.. GENERATED FROM PYTHON SOURCE LINES 89-96

Custom bundle definitions such as the OR, and the standard BundleDict can be
combined through addition. To get both the OR and the standard bundles, we
would execute the following code::

    bundles = bundles + abd.default18_bd()

In this case, we will skip this and generate just the OR.

.. GENERATED FROM PYTHON SOURCE LINES 99-114

Define GroupAFQ object
----------------------
HBN POD2 have been processed with qsiprep [5]_. This means that a brain mask
has already been computer for them. As you can see in other examples, these
data also have a mapping calculated for them, which can also be incorporated
into processing. However, in this case, we will let pyAFQ calculate its own
SyN-based mapping so that the `combine_bundle` method can be used below to
create a montage visualization.

For tractography, we use CSD-based probabilistic tractography seeding
extensively (`n_seeds=4` means 81 seeds per voxel!), but only within the ROIs
and not throughout the white matter. This is controlled by passing
`"seed_mask": RoiImage()` in the `tracking_params` dict. The custom bundles
are passed as `bundle_info=bundles`. The call to `my_afq.export_all()`
initiates the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 114-134

.. code-block:: Python


    brain_mask_definition = ImageFile(
        suffix="mask",
        filters={'desc': 'brain',
                 'space': 'T1w',
                 'scope': 'qsiprep'})

    my_afq = GroupAFQ(
        bids_path=study_dir,
        preproc_pipeline="qsiprep",
        output_dir=op.join(study_dir, "derivatives", "afq_or"),
        brain_mask_definition=brain_mask_definition,
        tracking_params={"n_seeds": 4,
                         "directions": "prob",
                         "odf_model": "CSD",
                         "seed_mask": RoiImage()},
        bundle_info=bundles)

    my_afq.export_all()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/234119.0 [00:00<?, ?it/s]      0%|          | 120/234119.0 [00:00<03:15, 1199.30it/s]      0%|          | 607/234119.0 [00:00<01:09, 3356.02it/s]      0%|          | 1110/234119.0 [00:00<00:56, 4117.52it/s]      1%|          | 1627/234119.0 [00:00<00:51, 4532.14it/s]      1%|          | 2135/234119.0 [00:00<00:49, 4728.91it/s]      1%|          | 2634/234119.0 [00:00<00:48, 4814.87it/s]      1%|▏         | 3154/234119.0 [00:00<00:46, 4939.45it/s]      2%|▏         | 3648/234119.0 [00:00<00:46, 4916.49it/s]      2%|▏         | 4168/234119.0 [00:00<00:45, 5004.21it/s]      2%|▏         | 4669/234119.0 [00:01<00:45, 5002.57it/s]      2%|▏         | 5170/234119.0 [00:01<00:45, 4985.30it/s]      2%|▏         | 5680/234119.0 [00:01<00:45, 5018.04it/s]      3%|▎         | 6195/234119.0 [00:01<00:45, 5056.48it/s]      3%|▎         | 6710/234119.0 [00:01<00:44, 5082.89it/s]      3%|▎         | 7236/234119.0 [00:01<00:44, 5135.64it/s]      3%|▎         | 7755/234119.0 [00:01<00:43, 5147.80it/s]      4%|▎         | 8270/234119.0 [00:01<00:44, 5129.39it/s]      4%|▍         | 8783/234119.0 [00:01<00:44, 5062.75it/s]      4%|▍         | 9296/234119.0 [00:01<00:44, 5080.26it/s]      4%|▍         | 9814/234119.0 [00:02<00:43, 5109.63it/s]      4%|▍         | 10326/234119.0 [00:02<00:43, 5090.45it/s]      5%|▍         | 10844/234119.0 [00:02<00:43, 5116.46it/s]      5%|▍         | 11366/234119.0 [00:02<00:43, 5147.03it/s]      5%|▌         | 11889/234119.0 [00:02<00:42, 5169.24it/s]      5%|▌         | 12406/234119.0 [00:02<00:43, 5137.55it/s]      6%|▌         | 12947/234119.0 [00:02<00:42, 5216.34it/s]      6%|▌         | 13469/234119.0 [00:02<00:42, 5200.33it/s]      6%|▌         | 13990/234119.0 [00:02<00:43, 5091.39it/s]      6%|▌         | 14528/234119.0 [00:02<00:42, 5175.41it/s]      6%|▋         | 15047/234119.0 [00:03<00:42, 5156.87it/s]      7%|▋         | 15579/234119.0 [00:03<00:41, 5203.56it/s]      7%|▋         | 16106/234119.0 [00:03<00:41, 5220.01it/s]      7%|▋         | 16635/234119.0 [00:03<00:41, 5239.52it/s]      7%|▋         | 17174/234119.0 [00:03<00:41, 5282.66it/s]      8%|▊         | 17703/234119.0 [00:03<00:41, 5247.51it/s]      8%|▊         | 18239/234119.0 [00:03<00:40, 5279.74it/s]      8%|▊         | 18770/234119.0 [00:03<00:40, 5287.38it/s]      8%|▊         | 19299/234119.0 [00:03<00:40, 5272.64it/s]      8%|▊         | 19827/234119.0 [00:03<00:40, 5269.66it/s]      9%|▊         | 20355/234119.0 [00:04<00:41, 5197.63it/s]      9%|▉         | 20889/234119.0 [00:04<00:40, 5239.67it/s]      9%|▉         | 21414/234119.0 [00:04<00:40, 5238.62it/s]      9%|▉         | 21949/234119.0 [00:04<00:40, 5269.55it/s]     10%|▉         | 22477/234119.0 [00:04<00:40, 5256.29it/s]     10%|▉         | 23020/234119.0 [00:04<00:39, 5303.26it/s]     10%|█         | 23551/234119.0 [00:04<00:40, 5235.59it/s]     10%|█         | 24091/234119.0 [00:04<00:39, 5281.48it/s]     11%|█         | 24620/234119.0 [00:04<00:39, 5246.31it/s]     11%|█         | 25151/234119.0 [00:04<00:39, 5264.57it/s]     11%|█         | 25686/234119.0 [00:05<00:39, 5287.10it/s]     11%|█         | 26224/234119.0 [00:05<00:39, 5314.79it/s]     11%|█▏        | 26756/234119.0 [00:05<00:39, 5276.91it/s]     12%|█▏        | 27297/234119.0 [00:05<00:38, 5315.27it/s]     12%|█▏        | 27835/234119.0 [00:05<00:38, 5334.32it/s]     12%|█▏        | 28379/234119.0 [00:05<00:38, 5365.11it/s]     12%|█▏        | 28916/234119.0 [00:05<00:38, 5340.06it/s]     13%|█▎        | 29464/234119.0 [00:05<00:38, 5381.34it/s]     13%|█▎        | 30003/234119.0 [00:05<00:38, 5291.20it/s]     13%|█▎        | 30533/234119.0 [00:05<00:38, 5254.56it/s]     13%|█▎        | 31068/234119.0 [00:06<00:38, 5278.63it/s]     14%|█▎        | 31620/234119.0 [00:06<00:37, 5349.39it/s]     14%|█▎        | 32157/234119.0 [00:06<00:37, 5353.71it/s]     14%|█▍        | 32699/234119.0 [00:06<00:37, 5370.31it/s]     14%|█▍        | 33237/234119.0 [00:06<00:37, 5371.66it/s]     14%|█▍        | 33775/234119.0 [00:06<00:37, 5327.84it/s]     15%|█▍        | 34308/234119.0 [00:06<00:37, 5315.31it/s]     15%|█▍        | 34857/234119.0 [00:06<00:37, 5365.94it/s]     15%|█▌        | 35402/234119.0 [00:06<00:36, 5390.02it/s]     15%|█▌        | 35942/234119.0 [00:06<00:37, 5354.02it/s]     16%|█▌        | 36488/234119.0 [00:07<00:36, 5383.80it/s]     16%|█▌        | 37035/234119.0 [00:07<00:36, 5407.60it/s]     16%|█▌        | 37576/234119.0 [00:07<00:36, 5337.33it/s]     16%|█▋        | 38115/234119.0 [00:07<00:36, 5351.23it/s]     17%|█▋        | 38656/234119.0 [00:07<00:36, 5365.20it/s]     17%|█▋        | 39198/234119.0 [00:07<00:36, 5379.10it/s]     17%|█▋        | 39737/234119.0 [00:07<00:36, 5363.59it/s]     17%|█▋        | 40282/234119.0 [00:07<00:35, 5387.70it/s]     17%|█▋        | 40821/234119.0 [00:07<00:36, 5362.92it/s]     18%|█▊        | 41358/234119.0 [00:07<00:36, 5320.83it/s]     18%|█▊        | 41894/234119.0 [00:08<00:36, 5331.69it/s]     18%|█▊        | 42434/234119.0 [00:08<00:35, 5349.60it/s]     18%|█▊        | 42981/234119.0 [00:08<00:35, 5385.17it/s]     19%|█▊        | 43520/234119.0 [00:08<01:03, 2988.16it/s]     19%|█▉        | 44070/234119.0 [00:08<00:54, 3468.44it/s]     19%|█▉        | 44609/234119.0 [00:08<00:48, 3880.96it/s]     19%|█▉        | 45124/234119.0 [00:08<00:45, 4177.90it/s]     20%|█▉        | 45657/234119.0 [00:09<00:42, 4466.61it/s]     20%|█▉        | 46182/234119.0 [00:09<00:40, 4672.49it/s]     20%|█▉        | 46701/234119.0 [00:09<00:38, 4810.68it/s]     20%|██        | 47236/234119.0 [00:09<00:37, 4960.44it/s]     20%|██        | 47778/234119.0 [00:09<00:36, 5089.01it/s]     21%|██        | 48320/234119.0 [00:09<00:35, 5182.80it/s]     21%|██        | 48851/234119.0 [00:09<00:35, 5203.38it/s]     21%|██        | 49382/234119.0 [00:09<00:35, 5233.15it/s]     21%|██▏       | 49917/234119.0 [00:09<00:34, 5266.18it/s]     22%|██▏       | 50448/234119.0 [00:09<00:34, 5278.12it/s]     22%|██▏       | 50989/234119.0 [00:10<00:34, 5315.09it/s]     22%|██▏       | 51537/234119.0 [00:10<00:34, 5359.63it/s]     22%|██▏       | 52098/234119.0 [00:10<00:33, 5434.23it/s]     22%|██▏       | 52646/234119.0 [00:10<00:33, 5446.19it/s]     23%|██▎       | 53192/234119.0 [00:10<00:33, 5377.21it/s]     23%|██▎       | 53731/234119.0 [00:10<00:33, 5338.81it/s]     23%|██▎       | 54275/234119.0 [00:10<00:33, 5367.35it/s]     23%|██▎       | 54822/234119.0 [00:10<00:33, 5395.96it/s]     24%|██▎       | 55362/234119.0 [00:10<00:33, 5393.52it/s]     24%|██▍       | 55911/234119.0 [00:10<00:32, 5421.56it/s]     24%|██▍       | 56454/234119.0 [00:11<00:32, 5414.53it/s]     24%|██▍       | 56996/234119.0 [00:11<00:32, 5372.60it/s]     25%|██▍       | 57534/234119.0 [00:11<00:33, 5310.20it/s]     25%|██▍       | 58066/234119.0 [00:11<00:33, 5283.70it/s]     25%|██▌       | 58608/234119.0 [00:11<00:32, 5323.61it/s]     25%|██▌       | 59161/234119.0 [00:11<00:32, 5384.01it/s]     26%|██▌       | 59712/234119.0 [00:11<00:32, 5421.10it/s]     26%|██▌       | 60264/234119.0 [00:11<00:31, 5449.67it/s]     26%|██▌       | 60810/234119.0 [00:11<00:31, 5451.53it/s]     26%|██▌       | 61356/234119.0 [00:11<00:32, 5391.97it/s]     26%|██▋       | 61896/234119.0 [00:12<00:32, 5312.67it/s]     27%|██▋       | 62428/234119.0 [00:12<00:32, 5306.91it/s]     27%|██▋       | 62980/234119.0 [00:12<00:31, 5368.52it/s]     27%|██▋       | 63530/234119.0 [00:12<00:31, 5404.99it/s]     27%|██▋       | 64079/234119.0 [00:12<00:31, 5430.23it/s]     28%|██▊       | 64634/234119.0 [00:12<00:31, 5465.42it/s]     28%|██▊       | 65189/234119.0 [00:12<00:30, 5489.99it/s]     28%|██▊       | 65739/234119.0 [00:12<00:31, 5421.41it/s]     28%|██▊       | 66282/234119.0 [00:12<00:31, 5352.61it/s]     29%|██▊       | 66818/234119.0 [00:12<00:31, 5329.08it/s]     29%|██▉       | 67377/234119.0 [00:13<00:30, 5405.38it/s]     29%|██▉       | 67925/234119.0 [00:13<00:30, 5426.92it/s]     29%|██▉       | 68471/234119.0 [00:13<00:30, 5435.49it/s]     29%|██▉       | 69024/234119.0 [00:13<00:30, 5461.63it/s]     30%|██▉       | 69588/234119.0 [00:13<00:29, 5514.40it/s]     30%|██▉       | 70140/234119.0 [00:13<00:30, 5423.67it/s]     30%|███       | 70683/234119.0 [00:13<00:30, 5402.87it/s]     30%|███       | 71227/234119.0 [00:13<00:30, 5411.00it/s]     31%|███       | 71785/234119.0 [00:13<00:29, 5459.16it/s]     31%|███       | 72332/234119.0 [00:13<00:29, 5422.59it/s]     31%|███       | 72888/234119.0 [00:14<00:29, 5462.40it/s]     31%|███▏      | 73451/234119.0 [00:14<00:29, 5511.66it/s]     32%|███▏      | 74020/234119.0 [00:14<00:28, 5563.77it/s]     32%|███▏      | 74577/234119.0 [00:14<00:29, 5440.17it/s]     32%|███▏      | 75122/234119.0 [00:14<00:29, 5378.08it/s]     32%|███▏      | 75670/234119.0 [00:14<00:29, 5406.62it/s]     33%|███▎      | 76212/234119.0 [00:14<00:29, 5406.66it/s]     33%|███▎      | 76753/234119.0 [00:14<00:29, 5398.13it/s]     33%|███▎      | 77306/234119.0 [00:14<00:28, 5436.14it/s]     33%|███▎      | 77850/234119.0 [00:15<00:28, 5429.59it/s]     33%|███▎      | 78405/234119.0 [00:15<00:28, 5464.88it/s]     34%|███▎      | 78952/234119.0 [00:15<00:28, 5362.74it/s]     34%|███▍      | 79489/234119.0 [00:15<00:28, 5364.32it/s]     34%|███▍      | 80027/234119.0 [00:15<00:28, 5367.03it/s]     34%|███▍      | 80564/234119.0 [00:15<00:28, 5361.42it/s]     35%|███▍      | 81107/234119.0 [00:15<00:28, 5380.67it/s]     35%|███▍      | 81652/234119.0 [00:15<00:28, 5400.45it/s]     35%|███▌      | 82194/234119.0 [00:15<00:28, 5403.61it/s]     35%|███▌      | 82760/234119.0 [00:15<00:27, 5479.73it/s]     36%|███▌      | 83309/234119.0 [00:16<00:28, 5317.20it/s]     36%|███▌      | 83842/234119.0 [00:16<00:28, 5284.39it/s]     36%|███▌      | 84386/234119.0 [00:16<00:28, 5329.20it/s]     36%|███▋      | 84928/234119.0 [00:16<00:27, 5354.27it/s]     37%|███▋      | 85485/234119.0 [00:16<00:27, 5414.90it/s]     37%|███▋      | 86040/234119.0 [00:16<00:27, 5453.94it/s]     37%|███▋      | 86586/234119.0 [00:16<00:27, 5449.55it/s]     37%|███▋      | 87133/234119.0 [00:16<00:26, 5453.33it/s]     37%|███▋      | 87679/234119.0 [00:16<00:27, 5384.87it/s]     38%|███▊      | 88218/234119.0 [00:16<00:27, 5327.86it/s]     38%|███▊      | 88752/234119.0 [00:17<00:27, 5316.80it/s]     38%|███▊      | 89284/234119.0 [00:17<00:27, 5285.14it/s]     38%|███▊      | 89813/234119.0 [00:17<00:27, 5275.93it/s]     39%|███▊      | 90368/234119.0 [00:17<00:26, 5353.91it/s]     39%|███▉      | 90908/234119.0 [00:17<00:26, 5366.73it/s]     39%|███▉      | 91457/234119.0 [00:17<00:26, 5401.52it/s]     39%|███▉      | 91998/234119.0 [00:17<00:26, 5386.37it/s]     40%|███▉      | 92537/234119.0 [00:17<00:26, 5352.75it/s]     40%|███▉      | 93073/234119.0 [00:17<00:26, 5348.51it/s]     40%|███▉      | 93608/234119.0 [00:17<00:26, 5315.29it/s]     40%|████      | 94140/234119.0 [00:18<00:26, 5212.86it/s]     40%|████      | 94668/234119.0 [00:18<00:26, 5231.70it/s]     41%|████      | 95205/234119.0 [00:18<00:26, 5268.72it/s]     41%|████      | 95742/234119.0 [00:18<00:26, 5298.62it/s]     41%|████      | 96273/234119.0 [00:18<00:26, 5289.38it/s]     41%|████▏     | 96803/234119.0 [00:18<00:25, 5286.34it/s]     42%|████▏     | 97332/234119.0 [00:18<00:26, 5240.63it/s]     42%|████▏     | 97857/234119.0 [00:18<00:26, 5236.64it/s]     42%|████▏     | 98395/234119.0 [00:18<00:25, 5278.68it/s]     42%|████▏     | 98939/234119.0 [00:18<00:25, 5325.64it/s]     42%|████▏     | 99472/234119.0 [00:19<00:25, 5259.34it/s]     43%|████▎     | 100010/234119.0 [00:19<00:25, 5294.03it/s]     43%|████▎     | 100545/234119.0 [00:19<00:25, 5305.22it/s]     43%|████▎     | 101076/234119.0 [00:19<00:25, 5262.44it/s]     43%|████▎     | 101623/234119.0 [00:19<00:24, 5321.32it/s]     44%|████▎     | 102165/234119.0 [00:19<00:24, 5347.72it/s]     44%|████▍     | 102709/234119.0 [00:19<00:24, 5373.16it/s]     44%|████▍     | 103247/234119.0 [00:19<00:24, 5368.24it/s]     44%|████▍     | 103797/234119.0 [00:19<00:24, 5405.40it/s]     45%|████▍     | 104346/234119.0 [00:19<00:23, 5429.51it/s]     45%|████▍     | 104895/234119.0 [00:20<00:23, 5444.37it/s]     45%|████▌     | 105440/234119.0 [00:20<00:24, 5273.70it/s]     45%|████▌     | 105993/234119.0 [00:20<00:23, 5346.62it/s]     46%|████▌     | 106549/234119.0 [00:20<00:23, 5407.90it/s]     46%|████▌     | 107106/234119.0 [00:20<00:23, 5453.34it/s]     46%|████▌     | 107666/234119.0 [00:20<00:23, 5494.52it/s]     46%|████▌     | 108216/234119.0 [00:20<00:22, 5475.51it/s]     46%|████▋     | 108764/234119.0 [00:20<00:22, 5475.39it/s]     47%|████▋     | 109312/234119.0 [00:20<00:22, 5439.16it/s]     47%|████▋     | 109862/234119.0 [00:20<00:22, 5455.20it/s]     47%|████▋     | 110408/234119.0 [00:21<00:22, 5453.71it/s]     47%|████▋     | 110954/234119.0 [00:21<00:23, 5297.33it/s]     48%|████▊     | 111513/234119.0 [00:21<00:22, 5380.94it/s]     48%|████▊     | 112066/234119.0 [00:21<00:22, 5423.93it/s]     48%|████▊     | 112624/234119.0 [00:21<00:22, 5465.86it/s]     48%|████▊     | 113172/234119.0 [00:21<00:22, 5438.54it/s]     49%|████▊     | 113717/234119.0 [00:21<00:22, 5372.35it/s]     49%|████▉     | 114273/234119.0 [00:21<00:22, 5424.81it/s]     49%|████▉     | 114816/234119.0 [00:21<00:22, 5417.01it/s]     49%|████▉     | 115362/234119.0 [00:21<00:21, 5427.18it/s]     50%|████▉     | 115912/234119.0 [00:22<00:21, 5448.05it/s]     50%|████▉     | 116457/234119.0 [00:22<00:21, 5434.18it/s]     50%|████▉     | 117025/234119.0 [00:22<00:21, 5506.75it/s]     50%|█████     | 117576/234119.0 [00:22<00:21, 5505.48it/s]     50%|█████     | 118127/234119.0 [00:22<00:21, 5502.40it/s]     51%|█████     | 118680/234119.0 [00:22<00:20, 5507.76it/s]     51%|█████     | 119231/234119.0 [00:22<00:21, 5420.57it/s]     51%|█████     | 119774/234119.0 [00:22<00:21, 5418.99it/s]     51%|█████▏    | 120318/234119.0 [00:22<00:20, 5423.88it/s]     52%|█████▏    | 120877/234119.0 [00:23<00:20, 5471.77it/s]     52%|█████▏    | 121430/234119.0 [00:23<00:20, 5487.24it/s]     52%|█████▏    | 121979/234119.0 [00:23<00:21, 5241.52it/s]     52%|█████▏    | 122522/234119.0 [00:23<00:21, 5294.38it/s]     53%|█████▎    | 123054/234119.0 [00:23<00:20, 5290.12it/s]     53%|█████▎    | 123587/234119.0 [00:23<00:20, 5301.53it/s]     53%|█████▎    | 124133/234119.0 [00:23<00:20, 5348.27it/s]     53%|█████▎    | 124682/234119.0 [00:23<00:20, 5388.26it/s]     53%|█████▎    | 125243/234119.0 [00:23<00:19, 5453.42it/s]     54%|█████▎    | 125797/234119.0 [00:23<00:19, 5476.72it/s]     54%|█████▍    | 126345/234119.0 [00:24<00:19, 5401.57it/s]     54%|█████▍    | 126886/234119.0 [00:24<00:19, 5371.85it/s]     54%|█████▍    | 127424/234119.0 [00:24<00:20, 5330.72it/s]     55%|█████▍    | 127970/234119.0 [00:24<00:19, 5367.14it/s]     55%|█████▍    | 128525/234119.0 [00:24<00:19, 5420.58it/s]     55%|█████▌    | 129068/234119.0 [00:24<00:19, 5399.77it/s]     55%|█████▌    | 129626/234119.0 [00:24<00:19, 5452.47it/s]     56%|█████▌    | 130173/234119.0 [00:24<00:19, 5454.53it/s]     56%|█████▌    | 130719/234119.0 [00:24<00:19, 5356.30it/s]     56%|█████▌    | 131256/234119.0 [00:24<00:19, 5339.37it/s]     56%|█████▋    | 131791/234119.0 [00:25<00:19, 5326.62it/s]     57%|█████▋    | 132324/234119.0 [00:25<00:19, 5320.64it/s]     57%|█████▋    | 132857/234119.0 [00:25<00:19, 5212.43it/s]     57%|█████▋    | 133403/234119.0 [00:25<00:19, 5283.75it/s]     57%|█████▋    | 133953/234119.0 [00:25<00:18, 5344.72it/s]     57%|█████▋    | 134507/234119.0 [00:25<00:18, 5402.15it/s]     58%|█████▊    | 135048/234119.0 [00:25<00:18, 5382.57it/s]     58%|█████▊    | 135592/234119.0 [00:25<00:18, 5398.71it/s]     58%|█████▊    | 136133/234119.0 [00:26<00:31, 3108.90it/s]     58%|█████▊    | 136643/234119.0 [00:26<00:27, 3499.69it/s]     59%|█████▊    | 137169/234119.0 [00:26<00:24, 3885.33it/s]     59%|█████▉    | 137715/234119.0 [00:26<00:22, 4259.08it/s]     59%|█████▉    | 138252/234119.0 [00:26<00:21, 4539.85it/s]     59%|█████▉    | 138812/234119.0 [00:26<00:19, 4821.36it/s]     60%|█████▉    | 139374/234119.0 [00:26<00:18, 5039.14it/s]     60%|█████▉    | 139909/234119.0 [00:26<00:18, 5110.15it/s]     60%|█████▉    | 140445/234119.0 [00:26<00:18, 5180.29it/s]     60%|██████    | 140984/234119.0 [00:27<00:17, 5238.82it/s]     60%|██████    | 141526/234119.0 [00:27<00:17, 5290.42it/s]     61%|██████    | 142074/234119.0 [00:27<00:17, 5345.71it/s]     61%|██████    | 142631/234119.0 [00:27<00:16, 5411.19it/s]     61%|██████    | 143189/234119.0 [00:27<00:16, 5459.64it/s]     61%|██████▏   | 143742/234119.0 [00:27<00:16, 5480.11it/s]     62%|██████▏   | 144292/234119.0 [00:27<00:16, 5409.07it/s]     62%|██████▏   | 144835/234119.0 [00:27<00:16, 5381.29it/s]     62%|██████▏   | 145380/234119.0 [00:27<00:16, 5399.36it/s]     62%|██████▏   | 145921/234119.0 [00:27<00:16, 5402.51it/s]     63%|██████▎   | 146467/234119.0 [00:28<00:16, 5414.41it/s]     63%|██████▎   | 147021/234119.0 [00:28<00:15, 5451.13it/s]     63%|██████▎   | 147581/234119.0 [00:28<00:15, 5493.22it/s]     63%|██████▎   | 148137/234119.0 [00:28<00:15, 5510.54it/s]     64%|██████▎   | 148689/234119.0 [00:28<00:15, 5449.54it/s]     64%|██████▎   | 149235/234119.0 [00:28<00:15, 5386.52it/s]     64%|██████▍   | 149793/234119.0 [00:28<00:15, 5439.87it/s]     64%|██████▍   | 150340/234119.0 [00:28<00:15, 5447.48it/s]     64%|██████▍   | 150893/234119.0 [00:28<00:15, 5468.91it/s]     65%|██████▍   | 151447/234119.0 [00:28<00:15, 5489.72it/s]     65%|██████▍   | 151999/234119.0 [00:29<00:14, 5498.76it/s]     65%|██████▌   | 152570/234119.0 [00:29<00:14, 5558.37it/s]     65%|██████▌   | 153126/234119.0 [00:29<00:14, 5485.21it/s]     66%|██████▌   | 153675/234119.0 [00:29<00:14, 5375.61it/s]     66%|██████▌   | 154247/234119.0 [00:29<00:14, 5475.67it/s]     66%|██████▌   | 154796/234119.0 [00:29<00:14, 5449.73it/s]     66%|██████▋   | 155357/234119.0 [00:29<00:14, 5495.20it/s]     67%|██████▋   | 155920/234119.0 [00:29<00:14, 5532.78it/s]     67%|██████▋   | 156474/234119.0 [00:29<00:14, 5531.86it/s]     67%|██████▋   | 157030/234119.0 [00:29<00:13, 5538.66it/s]     67%|██████▋   | 157585/234119.0 [00:30<00:14, 5455.33it/s]     68%|██████▊   | 158137/234119.0 [00:30<00:13, 5470.30it/s]     68%|██████▊   | 158689/234119.0 [00:30<00:13, 5483.05it/s]     68%|██████▊   | 159238/234119.0 [00:30<00:13, 5451.36it/s]     68%|██████▊   | 159797/234119.0 [00:30<00:13, 5491.38it/s]     68%|██████▊   | 160347/234119.0 [00:30<00:13, 5464.91it/s]     69%|██████▊   | 160901/234119.0 [00:30<00:13, 5485.66it/s]     69%|██████▉   | 161462/234119.0 [00:30<00:13, 5522.51it/s]     69%|██████▉   | 162015/234119.0 [00:30<00:13, 5439.40it/s]     69%|██████▉   | 162560/234119.0 [00:30<00:13, 5423.52it/s]     70%|██████▉   | 163109/234119.0 [00:31<00:13, 5442.80it/s]     70%|██████▉   | 163654/234119.0 [00:31<00:13, 5394.90it/s]     70%|███████   | 164207/234119.0 [00:31<00:12, 5433.82it/s]     70%|███████   | 164751/234119.0 [00:31<00:12, 5420.56it/s]     71%|███████   | 165318/234119.0 [00:31<00:12, 5494.63it/s]     71%|███████   | 165876/234119.0 [00:31<00:12, 5516.26it/s]     71%|███████   | 166428/234119.0 [00:31<00:12, 5441.73it/s]     71%|███████▏  | 166973/234119.0 [00:31<00:12, 5401.08it/s]     72%|███████▏  | 167535/234119.0 [00:31<00:12, 5463.94it/s]     72%|███████▏  | 168092/234119.0 [00:31<00:12, 5492.81it/s]     72%|███████▏  | 168642/234119.0 [00:32<00:11, 5488.85it/s]     72%|███████▏  | 169201/234119.0 [00:32<00:11, 5517.73it/s]     73%|███████▎  | 169768/234119.0 [00:32<00:11, 5562.76it/s]     73%|███████▎  | 170325/234119.0 [00:32<00:11, 5428.68it/s]     73%|███████▎  | 170871/234119.0 [00:32<00:11, 5437.61it/s]     73%|███████▎  | 171416/234119.0 [00:32<00:11, 5424.64it/s]     73%|███████▎  | 171965/234119.0 [00:32<00:11, 5442.88it/s]     74%|███████▎  | 172520/234119.0 [00:32<00:11, 5474.05it/s]     74%|███████▍  | 173077/234119.0 [00:32<00:11, 5500.34it/s]     74%|███████▍  | 173640/234119.0 [00:32<00:10, 5538.13it/s]     74%|███████▍  | 174208/234119.0 [00:33<00:10, 5578.17it/s]     75%|███████▍  | 174766/234119.0 [00:33<00:10, 5508.03it/s]     75%|███████▍  | 175318/234119.0 [00:33<00:10, 5471.19it/s]     75%|███████▌  | 175875/234119.0 [00:33<00:10, 5497.41it/s]     75%|███████▌  | 176429/234119.0 [00:33<00:10, 5508.50it/s]     76%|███████▌  | 176980/234119.0 [00:33<00:10, 5488.18it/s]     76%|███████▌  | 177540/234119.0 [00:33<00:10, 5520.60it/s]     76%|███████▌  | 178099/234119.0 [00:33<00:10, 5540.40it/s]     76%|███████▋  | 178654/234119.0 [00:33<00:10, 5508.33it/s]     77%|███████▋  | 179205/234119.0 [00:33<00:10, 5463.58it/s]     77%|███████▋  | 179754/234119.0 [00:34<00:09, 5470.60it/s]     77%|███████▋  | 180302/234119.0 [00:34<00:09, 5456.76it/s]     77%|███████▋  | 180860/234119.0 [00:34<00:09, 5489.78it/s]     77%|███████▋  | 181410/234119.0 [00:34<00:09, 5394.85it/s]     78%|███████▊  | 181973/234119.0 [00:34<00:09, 5462.79it/s]     78%|███████▊  | 182523/234119.0 [00:34<00:09, 5473.19it/s]     78%|███████▊  | 183071/234119.0 [00:34<00:09, 5436.72it/s]     78%|███████▊  | 183615/234119.0 [00:34<00:09, 5433.78it/s]     79%|███████▊  | 184159/234119.0 [00:34<00:09, 5394.49it/s]     79%|███████▉  | 184699/234119.0 [00:35<00:09, 5363.72it/s]     79%|███████▉  | 185256/234119.0 [00:35<00:09, 5424.28it/s]     79%|███████▉  | 185799/234119.0 [00:35<00:08, 5389.23it/s]     80%|███████▉  | 186339/234119.0 [00:35<00:08, 5371.13it/s]     80%|███████▉  | 186877/234119.0 [00:35<00:08, 5347.37it/s]     80%|████████  | 187414/234119.0 [00:35<00:08, 5353.81it/s]     80%|████████  | 187955/234119.0 [00:35<00:08, 5368.55it/s]     81%|████████  | 188492/234119.0 [00:35<00:08, 5366.13it/s]     81%|████████  | 189030/234119.0 [00:35<00:08, 5367.51it/s]     81%|████████  | 189591/234119.0 [00:35<00:08, 5438.90it/s]     81%|████████  | 190135/234119.0 [00:36<00:08, 5402.87it/s]     81%|████████▏ | 190676/234119.0 [00:36<00:08, 5374.06it/s]     82%|████████▏ | 191215/234119.0 [00:36<00:07, 5378.72it/s]     82%|████████▏ | 191753/234119.0 [00:36<00:07, 5332.57it/s]     82%|████████▏ | 192287/234119.0 [00:36<00:08, 5197.90it/s]     82%|████████▏ | 192826/234119.0 [00:36<00:07, 5253.02it/s]     83%|████████▎ | 193370/234119.0 [00:36<00:07, 5305.82it/s]     83%|████████▎ | 193918/234119.0 [00:36<00:07, 5357.21it/s]     83%|████████▎ | 194465/234119.0 [00:36<00:07, 5389.91it/s]     83%|████████▎ | 195005/234119.0 [00:36<00:07, 5382.63it/s]     84%|████████▎ | 195544/234119.0 [00:37<00:07, 5366.35it/s]     84%|████████▍ | 196084/234119.0 [00:37<00:07, 5374.01it/s]     84%|████████▍ | 196626/234119.0 [00:37<00:06, 5386.91it/s]     84%|████████▍ | 197165/234119.0 [00:37<00:06, 5369.62it/s]     84%|████████▍ | 197706/234119.0 [00:37<00:06, 5378.35it/s]     85%|████████▍ | 198244/234119.0 [00:37<00:06, 5337.66it/s]     85%|████████▍ | 198778/234119.0 [00:37<00:06, 5282.67it/s]     85%|████████▌ | 199307/234119.0 [00:37<00:06, 5279.57it/s]     85%|████████▌ | 199844/234119.0 [00:37<00:06, 5304.93it/s]     86%|████████▌ | 200375/234119.0 [00:37<00:06, 5299.52it/s]     86%|████████▌ | 200917/234119.0 [00:38<00:06, 5334.90it/s]     86%|████████▌ | 201456/234119.0 [00:38<00:06, 5348.84it/s]     86%|████████▋ | 201991/234119.0 [00:38<00:06, 5327.94it/s]     87%|████████▋ | 202524/234119.0 [00:38<00:05, 5306.92it/s]     87%|████████▋ | 203055/234119.0 [00:38<00:05, 5200.01it/s]     87%|████████▋ | 203601/234119.0 [00:38<00:05, 5276.45it/s]     87%|████████▋ | 204137/234119.0 [00:38<00:05, 5300.76it/s]     87%|████████▋ | 204680/234119.0 [00:38<00:05, 5337.05it/s]     88%|████████▊ | 205221/234119.0 [00:38<00:05, 5355.24it/s]     88%|████████▊ | 205757/234119.0 [00:38<00:05, 5311.81it/s]     88%|████████▊ | 206297/234119.0 [00:39<00:05, 5335.79it/s]     88%|████████▊ | 206839/234119.0 [00:39<00:05, 5359.35it/s]     89%|████████▊ | 207385/234119.0 [00:39<00:04, 5387.77it/s]     89%|████████▉ | 207930/234119.0 [00:39<00:04, 5405.68it/s]     89%|████████▉ | 208471/234119.0 [00:39<00:04, 5263.70it/s]     89%|████████▉ | 208999/234119.0 [00:39<00:04, 5225.83it/s]     89%|████████▉ | 209534/234119.0 [00:39<00:04, 5260.17it/s]     90%|████████▉ | 210081/234119.0 [00:39<00:04, 5321.18it/s]     90%|████████▉ | 210621/234119.0 [00:39<00:04, 5341.87it/s]     90%|█████████ | 211158/234119.0 [00:39<00:04, 5348.40it/s]     90%|█████████ | 211694/234119.0 [00:40<00:04, 5348.85it/s]     91%|█████████ | 212230/234119.0 [00:40<00:04, 5291.28it/s]     91%|█████████ | 212773/234119.0 [00:40<00:04, 5330.26it/s]     91%|█████████ | 213315/234119.0 [00:40<00:03, 5356.75it/s]     91%|█████████▏| 213851/234119.0 [00:40<00:03, 5311.79it/s]     92%|█████████▏| 214394/234119.0 [00:40<00:03, 5344.22it/s]     92%|█████████▏| 214929/234119.0 [00:40<00:03, 5302.51it/s]     92%|█████████▏| 215460/234119.0 [00:40<00:03, 5293.72it/s]     92%|█████████▏| 216008/234119.0 [00:40<00:03, 5347.42it/s]     92%|█████████▏| 216543/234119.0 [00:40<00:03, 5332.27it/s]     93%|█████████▎| 217096/234119.0 [00:41<00:03, 5390.22it/s]     93%|█████████▎| 217636/234119.0 [00:41<00:03, 5362.75it/s]     93%|█████████▎| 218173/234119.0 [00:41<00:02, 5360.32it/s]     93%|█████████▎| 218723/234119.0 [00:41<00:02, 5400.15it/s]     94%|█████████▎| 219264/234119.0 [00:41<00:02, 5349.80it/s]     94%|█████████▍| 219812/234119.0 [00:41<00:02, 5386.75it/s]     94%|█████████▍| 220351/234119.0 [00:41<00:02, 5385.75it/s]     94%|█████████▍| 220890/234119.0 [00:41<00:02, 5346.69it/s]     95%|█████████▍| 221436/234119.0 [00:41<00:02, 5379.76it/s]     95%|█████████▍| 221975/234119.0 [00:41<00:02, 5358.18it/s]     95%|█████████▌| 222512/234119.0 [00:42<00:02, 5361.18it/s]     95%|█████████▌| 223049/234119.0 [00:42<00:02, 5293.85it/s]     96%|█████████▌| 223602/234119.0 [00:42<00:01, 5363.48it/s]     96%|█████████▌| 224139/234119.0 [00:42<00:01, 5333.89it/s]     96%|█████████▌| 224676/234119.0 [00:42<00:01, 5342.89it/s]     96%|█████████▌| 225211/234119.0 [00:42<00:01, 5286.35it/s]     96%|█████████▋| 225741/234119.0 [00:42<00:01, 5288.14it/s]     97%|█████████▋| 226270/234119.0 [00:42<00:01, 5245.72it/s]     97%|█████████▋| 226795/234119.0 [00:42<00:01, 5235.55it/s]     97%|█████████▋| 227326/234119.0 [00:42<00:01, 5257.21it/s]     97%|█████████▋| 227852/234119.0 [00:43<00:01, 5234.84it/s]     98%|█████████▊| 228376/234119.0 [00:43<00:01, 5205.94it/s]     98%|█████████▊| 228897/234119.0 [00:43<00:01, 5193.20it/s]     98%|█████████▊| 229417/234119.0 [00:43<00:00, 5131.02it/s]     98%|█████████▊| 229931/234119.0 [00:43<00:00, 5129.06it/s]     98%|█████████▊| 230454/234119.0 [00:43<00:00, 5156.20it/s]     99%|█████████▊| 230975/234119.0 [00:43<00:00, 5170.70it/s]     99%|█████████▉| 231493/234119.0 [00:43<00:00, 5169.38it/s]     99%|█████████▉| 232021/234119.0 [00:43<00:00, 5202.35it/s]     99%|█████████▉| 232542/234119.0 [00:44<00:00, 5164.72it/s]    100%|█████████▉| 233097/234119.0 [00:44<00:00, 5277.67it/s]    100%|█████████▉| 233628/234119.0 [00:44<00:00, 5285.32it/s]    100%|██████████| 234119/234119.0 [00:44<00:00, 5276.59it/s]
    Optimizing level 2 [max iter: 10000]
    Optimizing level 1 [max iter: 1000]
    Optimizing level 0 [max iter: 100]
    Optimizing level 2 [max iter: 10000]
    Optimizing level 1 [max iter: 1000]
    Optimizing level 0 [max iter: 100]
    Optimizing level 2 [max iter: 10000]
    Optimizing level 1 [max iter: 1000]
    Optimizing level 0 [max iter: 100]
      0%|          | 0/2 [00:00<?, ?it/s]     50%|█████     | 1/2 [00:00<00:00,  3.18it/s]    100%|██████████| 2/2 [00:00<00:00,  3.21it/s]    100%|██████████| 2/2 [00:00<00:00,  3.20it/s]
      0%|          | 0/2 [00:00<?, ?it/s]     50%|█████     | 1/2 [00:00<00:00,  3.14it/s]    100%|██████████| 2/2 [00:00<00:00,  3.18it/s]    100%|██████████| 2/2 [00:00<00:00,  3.17it/s]




.. GENERATED FROM PYTHON SOURCE LINES 135-146

Visualize a montage
----------------------
One way to examine the output of the pyAFQ pipeline is by creating a montage
of images of a particular bundle across a group of participants (or, in this
case, the one participant that was analyzed).

.. note::

  The montage file is copied to the present working directory so that it gets
  properly rendered into the web-page containing this example. It is not
  necessary to do this when running this type of analysis.

.. GENERATED FROM PYTHON SOURCE LINES 146-151

.. code-block:: Python


    my_afq.combine_bundle("L_OR")
    montage = my_afq.group_montage("L_OR", (1, 1), "Axial", "left")
    shutil.copy(montage[0], op.split(montage[0])[-1])




.. image-sg:: /howto/howto_examples/images/sphx_glr_plot_optic_radiations_001.png
   :alt: plot optic radiations
   :srcset: /howto/howto_examples/images/sphx_glr_plot_optic_radiations_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/1 [00:00<?, ?it/s]    100%|██████████| 1/1 [00:00<00:00, 19.77it/s]
      0%|          | 0/1 [00:00<?, ?it/s]    100%|██████████| 1/1 [00:03<00:00,  3.63s/it]    100%|██████████| 1/1 [00:03<00:00,  3.63s/it]

    'bundle-L_OR_view-Axial_idx-0_montage.png'



.. GENERATED FROM PYTHON SOURCE LINES 152-158

Interactive bundle visualization
--------------------------------
Another way to examine the outputs is to export the individual bundle
figures, which show the streamlines, as well as the ROIs used to define the
bundle. This is an html file, which contains an interactive figure that can
be navigated, zoomed, rotated, etc.

.. GENERATED FROM PYTHON SOURCE LINES 158-162

.. code-block:: Python


    bundle_html = my_afq.export("indiv_bundles_figures")
    plotly.io.show(bundle_html["NDARAA948VFH"]["L_OR"])




.. raw:: html
    :file: images/sphx_glr_plot_optic_radiations_002.html





.. GENERATED FROM PYTHON SOURCE LINES 163-186

References
----------
.. [1] Caffarra S, Joo SJ, Bloom D, Kruper J, Rokem A, Yeatman JD. Development
    of the visual white matter pathways mediates development of
    electrophysiological responses in visual cortex. Hum Brain Mapp.
    2021;42(17):5785-5797.

.. [2] Caffarra S, Kanopka K, Kruper J, Richie-Halford A, Roy E, Rokem A,
    Yeatman JD. Development of the alpha rhythm is linked to visual white
    matter pathways and visual detection performance. bioRxiv.
    doi:10.1101/2022.09.03.506461

.. [3] Alexander LM, Escalera J, Ai L, et al. An open resource for
    transdiagnostic research in pediatric mental health and learning
    disorders. Sci Data. 2017;4:170181.

.. [4] Richie-Halford A, Cieslak M, Ai L, et al. An analysis-ready and quality
    controlled resource for pediatric brain white-matter research. Scientific
    Data. 2022;9(1):1-27.

.. [5] Cieslak M, Cook PA, He X, et al. QSIPrep: an integrative platform for
    preprocessing and reconstructing diffusion MRI data. Nat Methods.
    2021;18(7):775-778.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (15 minutes 41.216 seconds)

**Estimated memory usage:**  5422 MB


.. _sphx_glr_download_howto_howto_examples_plot_optic_radiations.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_optic_radiations.ipynb <plot_optic_radiations.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_optic_radiations.py <plot_optic_radiations.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
